-- Basic conversions should just work
select '1 bytes'::bytes, '1 B'::bytes;
 bytes  | bytes  
--------+--------
 1.00 B | 1.00 B
(1 row)

select '1 KiB'::bytes, '1 KB'::bytes;
  bytes  |  bytes  
---------+---------
 1.00 KB | 1.00 KB
(1 row)

select '1.2 KiB'::bytes, '1.2 KB'::bytes;
  bytes  |  bytes  
---------+---------
 1.20 KB | 1.20 KB
(1 row)

select '2345 MiB'::bytes, '2345 MB'::bytes;
  bytes  |  bytes  
---------+---------
 2.29 GB | 2.29 GB
(1 row)

select '1 GiB'::bytes, '1 GB'::bytes;
  bytes  |  bytes  
---------+---------
 1.00 GB | 1.00 GB
(1 row)

select '1 TiB'::bytes, '1 TB'::bytes;
  bytes  |  bytes  
---------+---------
 1.00 TB | 1.00 TB
(1 row)

select '1 EiB'::bytes, '1 EB'::bytes;
  bytes  |  bytes  
---------+---------
 1.00 EB | 1.00 EB
(1 row)

-- Boundary checks and syntax checks. 
\set VERBOSITY terse
\set ON_ERROR_STOP 0
SELECT '543'::bytes;
ERROR:  invalid input syntax for size type: "543" at character 8
SELECT '1 AiB'::bytes;
ERROR:  invalid input syntax for size type: "1 AiB" at character 8
select '1234567890 TiB'::bytes;
ERROR:  bytes value out of range at character 8
select '16383 PiB'::bytes;
  bytes   
----------
 16.00 EB
(1 row)

select '16384 PiB'::bytes;
ERROR:  bytes value out of range at character 8
select '16 EiB'::bytes;
ERROR:  bytes value out of range at character 8
select '17 EiB'::bytes;
ERROR:  bytes value out of range at character 8
\set ON_ERROR_STOP 1
create table sample(
       size1n numeric,
       size1b bytes,
       size2n numeric,
       size2b bytes
);
select setseed(1.0);
 setseed 
---------
 
(1 row)

insert into sample(size1n, size1b, size2n, size2b)
select 1024.0 * 1024.0 * one,
       format('%s MiB', one)::bytes,
       1024.0 * two,
       format('%s KB', two)::bytes
from (select random() * 512 as one,
             random() * 512 * 1024 as two
        from generate_series(1,1000)) vals;
     
\x on
select size1b, pg_size_pretty(size1n),
       size2b, pg_size_pretty(size2n),
       size1b + size2b as sum,
       pg_size_pretty(size1n + size2n) as pretty_sum,
       size1b - size2b as difference,
       size1b / 2 as divided,
       size1b * 2 as product1,
       2 * size1b as product2
  from sample
 where size1b > size2b
 limit 5;
-[ RECORD 1 ]--+----------
size1b         | 282.86 MB
pg_size_pretty | 283 MB
size2b         | 269.87 MB
pg_size_pretty | 270 MB
sum            | 552.72 MB
pretty_sum     | 553 MB
difference     | 12.99 MB
divided        | 141.43 MB
product1       | 565.71 MB
product2       | 565.71 MB
-[ RECORD 2 ]--+----------
size1b         | 385.02 MB
pg_size_pretty | 385 MB
size2b         | 338.98 MB
pg_size_pretty | 339 MB
sum            | 724.00 MB
pretty_sum     | 724 MB
difference     | 46.04 MB
divided        | 192.51 MB
product1       | 770.04 MB
product2       | 770.04 MB
-[ RECORD 3 ]--+----------
size1b         | 147.96 MB
pg_size_pretty | 148 MB
size2b         | 79.76 MB
pg_size_pretty | 80 MB
sum            | 227.72 MB
pretty_sum     | 228 MB
difference     | 68.21 MB
divided        | 73.98 MB
product1       | 295.93 MB
product2       | 295.93 MB
-[ RECORD 4 ]--+----------
size1b         | 105.93 MB
pg_size_pretty | 106 MB
size2b         | 52.28 MB
pg_size_pretty | 52 MB
sum            | 158.21 MB
pretty_sum     | 158 MB
difference     | 53.66 MB
divided        | 52.97 MB
product1       | 211.86 MB
product2       | 211.86 MB
-[ RECORD 5 ]--+----------
size1b         | 458.54 MB
pg_size_pretty | 459 MB
size2b         | 70.78 MB
pg_size_pretty | 71 MB
sum            | 529.32 MB
pretty_sum     | 529 MB
difference     | 387.76 MB
divided        | 229.27 MB
product1       | 917.07 MB
product2       | 917.07 MB

\x off
